#include <dt-bindings/zmk/modifiers.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Configure hold-tap behaviors (optional: using default 200ms tapping term)

&mt { tapping_term_ms = <200>; };   // Mod-tap (for home row mods)
&lt { tapping_term_ms = <200>; };   // Layer-tap (for layer keys)
/ {
    behaviors {
        next_prev: next_prev {
            compatible = "zmk,behavior-tap-dance";
            label = "NEXT_PREV";
            #binding-cells = <0>;
            bindings = <&kp C_NEXT>, <&kp C_PREV>;

            tapping-term-ms = <150>;
        };

        hold_quick: hold_quick {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_QUICK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <145>;
            flavor = "tap-preferred";
        };
    };

    macros {
        tile_e: tile_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp E>;
            label = "TILE_E";
        };

        tile_a: tile_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp A>;
            label = "TILE_A";
        };

        tile_u: tile_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp U>;
            label = "TILE_U";
        };

        tilde_i: tilde_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp I>;
            label = "TILDE_I";
        };

        tilde_o: tilde_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp O>;
            label = "TILDE_O";
        };

        enye: enye {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp N>;
            label = "ENYE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base Layer: QWERTY with home-row mods and layer-tap keys

        default_layer {
            bindings = <
&trans  &hold_quick F10 Q  &kp W               &kp E           &kp R                &kp T                   &kp Y     &kp U                &kp I          &kp O     &kp P                         &trans
&trans  &lt 1 A            &mt LEFT_CONTROL S  &mt LEFT_ALT D  &hold_quick LSHFT F  &kp G                   &kp H     &hold_quick RSHFT J  &kp K          &kp RALT  &mt RCTRL SEMI                &trans
&trans  &lt 2 Z            &kp X               &kp C           &kp V                &mt CAPSLOCK B          &kp N     &kp M                &kp COMMA      &kp DOT   &mt LA(NUMBER_1) EXCLAMATION  &trans
                                               &lt 4 TAB       &kp LA(BSPC)         &mt LEFT_COMMAND RET    &kp BSPC  &kp SPACE            &kp RG(SPACE)
            >;
        };

        // Layer 1: Navigation & Numbers

        nav_layer {
            bindings = <
&trans  &trans  &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  &kp LC(LA(UP))      &kp MINUS         &kp N7  &kp N8  &kp N9  &kp FSLH      &trans
&trans  &trans  &kp LEFT      &kp DOWN  &kp RIGHT      &kp LC(LA(DOWN))    &kp LS(ASTERISK)  &kp N4  &kp N5  &kp N6  &kp LS(PLUS)  &trans
&trans  &trans  &kp LG(LEFT)  &trans    &kp LG(RIGHT)  &kp SPACE           &kp DOT           &kp N1  &kp N2  &kp N3  &kp EQUAL     &trans
                              &trans    &trans         &trans              &trans            &trans  &kp N0
            >;
        };

        // Layer 2: Symbols and Punctuation

        sym_layer {
            bindings = <
&trans  &none  &kp LG(LS(NUMBER_3))  &kp LG(LS(NUMBER_4))  &kp LS(LG(N5))  &kp C_BRIGHTNESS_INC    &kp LS(LBRC)  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RPAR)   &trans
&trans  &none  &kp LS(RET)           &kp LS(RET)           &kp LG(RET)     &kp C_BRIGHTNESS_DEC    &kp LS(RBRC)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PIPE)   &trans
&trans  &none  &kp APOSTROPHE        &kp LS(TAB)           &kp TAB         &kp SPACE               &kp LBKT      &kp RBKT      &kp LS(AT)     &kp LS(POUND)  &kp LS(QMARK)  &trans
                                     &trans                &trans          &trans                  &trans        &trans        &trans
            >;
        };

        // Layer 3: Media Controls (Volume, Play/Pause, Mute)

        media_layer {
            bindings = <
&trans  &trans      &trans        &trans        &trans            &trans    &kp C_PLAY_PAUSE  &next_prev         &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE     &trans
&trans  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE  &trans    &kp LS(TILDE)     &kp LA(LS(MINUS))  &kp BSLH           &kp FSLH         &kp GRAVE      &trans
&trans  &trans      &trans        &trans        &trans            &trans    &trans            &kp SEMI           &kp LS(COLON)      &kp MINUS        &kp LS(QMARK)  &trans
                                  &trans        &trans            &trans    &trans            &trans             &trans
            >;
        };

        // Layer 4: Bluetooth Profiles Switching

        bt_layer {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_PRV  &bt BT_NXT  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &trans      &trans      &trans  &trans  &trans  &trans
&trans  &trans        &trans          &trans        &trans        &trans          &trans      &trans      &trans  &trans  &trans  &trans
                                      &trans        &trans        &trans          &trans      &trans      &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans   &trans  &tile_e  &trans  &trans    &trans  &tile_u  &tilde_i  &tilde_o  &trans  &trans
&trans  &tile_a  &trans  &trans   &trans  &trans    &trans  &trans   &trans    &trans    &trans  &trans
&trans  &trans   &trans  &trans   &trans  &trans    &enye   &trans   &trans    &trans    &trans  &trans
                         &trans   &trans  &trans    &trans  &trans   &trans
            >;
        };
    };
};
