#include <dt-bindings/zmk/modifiers.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Configure hold-tap behaviors (optional: using default 200ms tapping term)

&mt {
    tapping_term_ms = <200>;
    flavor = "tap-preferred";
};   // Mod-tap (for home row mods)
&lt { tapping_term_ms = <200>; };   // Layer-tap (for layer keys)
/ {
    behaviors {
        next_prev: next_prev {
            compatible = "zmk,behavior-tap-dance";
            label = "NEXT_PREV";
            #binding-cells = <0>;
            bindings = <&kp C_NEXT>, <&kp C_PREV>;

            tapping-term-ms = <150>;
        };

        slowlayer: slowlayer {
            compatible = "zmk,behavior-hold-tap";
            label = "SLOWLAYER";
            #binding-cells = <2>;
            bindings = <&to>, <&kp>;

            tapping-term-ms = <500>;
            flavor = "tap-preferred";
        };
    };

    macros {
        tile_e: tile_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp E>;
            label = "TILE_E";
        };

        tile_a: tile_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp A>;
            label = "TILE_A";
        };

        tile_u: tile_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp U>;
            label = "TILE_U";
        };

        tilde_i: tilde_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp I>;
            label = "TILDE_I";
        };

        tilde_o: tilde_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp O>;
            label = "TILDE_O";
        };

        enye: enye {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp N>;
            label = "ENYE";
        };

        ale_email: ale_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp L &kp E &kp J &kp A &kp N &kp D &kp R &kp O &kp W &kp U &kp N &kp D &kp E &kp R &kp L &kp I &kp C &kp H &kp AT &kp G &kp M &kp A &kp L &kp DOT &kp C &kp O &kp M>;
            label = "ALE_EMAIL";
        };

        pewu_email: pewu_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp E &kp W &kp U &kp AT &kp H &kp E &kp Y &kp DOT &kp C &kp O &kp M>;
            label = "PEWU_EMAIL";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <4 3>;
        };

        combo_media {
            bindings = <&to 3>;
            key-positions = <19 20>;
        };

        combo_media_back {
            bindings = <&to 0>;
            key-positions = <19 20>;
            layers = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base Layer: QWERTY with home-row mods and layer-tap keys

        default_layer {
            bindings = <
&trans  &mt F10 Q  &kp W               &kp E            &kp R                         &kp T                   &kp Y                        &kp U                  &kp I          &kp O    &slowlayer 5 P                &trans
&trans  &lt 1 A    &mt LEFT_CONTROL S  &mt LEFT_ALT D   &kp F                         &kp G                   &kp H                        &kp J                  &kp K          &kp L    &lt 4 SINGLE_QUOTE            &trans
&trans  &lt 2 Z    &kp X               &kp C            &kp V                         &mt CAPSLOCK B          &kp N                        &kp M                  &kp COMMA      &kp DOT  &mt LA(QUESTION) EXCLAMATION  &trans
                                       &lt 3 BACKSPACE  &mt LEFT_SHIFT LA(BACKSPACE)  &mt LEFT_COMMAND RET    &mt RIGHT_COMMAND BACKSPACE  &mt RIGHT_SHIFT SPACE  &kp RG(SPACE)
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &kp LA(LEFT)  &kp UP     &kp LA(RIGHT)  &kp ESCAPE           &kp MINUS         &kp N7                    &kp N8  &kp N9  &kp FSLH   &trans
&trans  &trans  &kp LEFT      &kp DOWN   &kp RIGHT      &kp LC(LA(LG(O)))    &kp LS(ASTERISK)  &mt RIGHT_SHIFT NUMBER_4  &kp N5  &kp N6  &kp PLUS   &trans
&trans  &trans  &kp LG(LEFT)  &trans     &kp LG(RIGHT)  &kp SPACE            &kp DOT           &kp N1                    &kp N2  &kp N3  &kp EQUAL  &trans
                              &kp SPACE  &kp LS(RET)    &kp LG(RET)          &trans            &trans                    &kp N0
            >;
        };

        sym_layer {
            bindings = <
&trans  &none  &kp LG(LS(NUMBER_3))  &kp LG(LS(NUMBER_4))  &kp LS(LG(N5))  &kp C_BRIGHTNESS_INC    &kp LEFT_BRACE   &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &none  &trans                &kp LS(RET)           &kp LG(RET)     &kp C_BRIGHTNESS_DEC    &kp RIGHT_BRACE  &kp DOLLAR     &kp PERCENT   &kp CARET             &kp PIPE               &trans
&trans  &none  &kp APOSTROPHE        &kp LS(TAB)           &kp TAB         &kp SPACE               &kp LBKT         &kp RBKT       &kp AT_SIGN   &kp HASH              &kp LS(QMARK)          &trans
                                     &trans                &trans          &trans                  &trans           &trans         &trans
            >;
        };

        media_layer {
            bindings = <
&trans  &trans      &trans       &trans  &trans  &trans    &kp C_PLAY_PAUSE  &next_prev         &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp C_MUTE           &trans
&trans  &ale_email  &pewu_email  &trans  &trans  &trans    &kp LS(TILDE)     &kp LA(LS(MINUS))  &kp BSLH           &kp FSLH           &kp GRAVE            &trans
&trans  &trans      &trans       &trans  &trans  &trans    &trans            &kp SEMI           &kp LS(COLON)      &kp RA(RS(MINUS))  &mt LS(MINUS) MINUS  &trans
                                 &trans  &trans  &trans    &trans            &trans             &trans
            >;
        };

        snanish {
            bindings = <
&trans  &trans   &trans  &tile_e  &trans  &trans    &trans  &tile_u  &tilde_i  &tilde_o  &trans  &trans
&trans  &tile_a  &trans  &trans   &trans  &trans    &trans  &trans   &trans    &trans    &trans  &trans
&trans  &trans   &trans  &trans   &trans  &trans    &enye   &trans   &trans    &trans    &trans  &trans
                         &trans   &trans  &trans    &trans  &trans   &trans
            >;
        };

        bt_layer {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_PRV  &bt BT_NXT  &trans  &trans  &to 0   &trans
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &trans      &trans      &trans  &trans  &trans  &trans
&trans  &trans        &trans          &trans        &trans        &trans          &trans      &trans      &trans  &trans  &trans  &trans
                                      &trans        &trans        &trans          &trans      &trans      &trans
            >;
        };
    };
};
